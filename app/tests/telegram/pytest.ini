[tool:pytest]
# Telegram test configuration
testpaths = app/tests/telegram
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for service interactions
    e2e: End-to-end tests for complete workflows
    performance: Performance and benchmark tests
    safety: Safety mechanism and anti-detection tests
    slow: Tests that take longer than usual to run
    mock_api: Tests that require Telegram API mocking
    requires_db: Tests that require database connection
    memory_intensive: Tests that use significant memory

# Asyncio settings
asyncio_mode = auto

# Timeout settings
timeout = 300
timeout_method = thread

# Coverage settings
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=app.services.telegram_account_manager
    --cov=app.models.telegram_account
    --cov=app.telegram
    --cov-report=term-missing
    --cov-report=html:app/tests/telegram/htmlcov
    --cov-fail-under=80

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:pyrogram.*

# Test discovery
norecursedirs = .git .tox .env venv env __pycache__ .pytest_cache htmlcov

# Performance test settings
performance_max_runtime = 60  # seconds
performance_memory_limit = 512  # MB
performance_cpu_limit = 80  # percentage