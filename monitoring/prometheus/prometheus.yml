# Prometheus Configuration for AI Conversation System
# Comprehensive monitoring setup with service discovery

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'ai-conversation-production'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - alertmanager-service.ai-conversation-monitoring.svc.cluster.local:9093
    timeout: 10s
    api_version: v2

# Rule files for alerting
rule_files:
- "rules/*.yml"

# Scrape configurations
scrape_configs:
# ==================== Prometheus Self-Monitoring ====================
- job_name: 'prometheus'
  static_configs:
  - targets: ['localhost:9090']
  scrape_interval: 30s

# ==================== Kubernetes System Monitoring ====================
- job_name: 'kubernetes-apiservers'
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - default
  scheme: https
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  relabel_configs:
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
    action: keep
    regex: default;kubernetes;https

- job_name: 'kubernetes-nodes'
  kubernetes_sd_configs:
  - role: node
  scheme: https
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  relabel_configs:
  - action: labelmap
    regex: __meta_kubernetes_node_label_(.+)
  - target_label: __address__
    replacement: kubernetes.default.svc:443
  - source_labels: [__meta_kubernetes_node_name]
    regex: (.+)
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}/proxy/metrics

- job_name: 'kubernetes-cadvisor'
  kubernetes_sd_configs:
  - role: node
  scheme: https
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  relabel_configs:
  - action: labelmap
    regex: __meta_kubernetes_node_label_(.+)
  - target_label: __address__
    replacement: kubernetes.default.svc:443
  - source_labels: [__meta_kubernetes_node_name]
    regex: (.+)
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

- job_name: 'kubernetes-service-endpoints'
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - ai-conversation
      - ai-conversation-monitoring
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    action: keep
    regex: true
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    action: replace
    target_label: __scheme__
    regex: (https?)
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    action: replace
    target_label: __metrics_path__
    regex: (.+)
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    action: replace
    regex: ([^:]+)(?::[0-9]+)?;([0-9]+)
    replacement: $1:$2
    target_label: __address__
  - action: labelmap
    regex: __meta_kubernetes_service_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    action: replace
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_service_name]
    action: replace
    target_label: kubernetes_name

# ==================== AI Conversation System Monitoring ====================
- job_name: 'ai-conversation-app'
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - ai-conversation
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_name]
    action: keep
    regex: ai-conversation-app-internal
  - source_labels: [__meta_kubernetes_endpoint_port_name]
    action: keep
    regex: metrics
  - action: labelmap
    regex: __meta_kubernetes_service_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_service_name]
    target_label: kubernetes_name
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: kubernetes_pod_name
  scrape_interval: 15s
  metrics_path: /metrics

- job_name: 'ai-conversation-workers'
  kubernetes_sd_configs:
  - role: pod
    namespaces:
      names:
      - ai-conversation
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_label_component]
    action: keep
    regex: worker-.*
  - source_labels: [__meta_kubernetes_pod_container_port_name]
    action: keep
    regex: metrics
  - action: labelmap
    regex: __meta_kubernetes_pod_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: kubernetes_pod_name
  - source_labels: [__meta_kubernetes_pod_label_component]
    target_label: worker_type
  scrape_interval: 30s

# ==================== Database Monitoring ====================
- job_name: 'postgres-exporter'
  static_configs:
  - targets:
    - postgres-exporter.ai-conversation.svc.cluster.local:9187
  relabel_configs:
  - target_label: instance
    replacement: postgres-master
  - target_label: service
    replacement: postgresql
  scrape_interval: 30s

- job_name: 'redis-exporter'
  static_configs:
  - targets:
    - redis-exporter.ai-conversation.svc.cluster.local:9121
  relabel_configs:
  - target_label: instance
    replacement: redis-cluster
  - target_label: service
    replacement: redis
  scrape_interval: 30s

# ==================== Node and System Monitoring ====================
- job_name: 'node-exporter'
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - ai-conversation-monitoring
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_name]
    action: keep
    regex: node-exporter
  - action: labelmap
    regex: __meta_kubernetes_service_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_service_name]
    target_label: kubernetes_name
  scrape_interval: 30s

- job_name: 'cadvisor'
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - ai-conversation-monitoring
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_name]
    action: keep
    regex: cadvisor
  - action: labelmap
    regex: __meta_kubernetes_service_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_service_name]
    target_label: kubernetes_name
  scrape_interval: 30s

# ==================== GPU Monitoring (if available) ====================
- job_name: 'gpu-exporter'
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - ai-conversation
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_name]
    action: keep
    regex: gpu-exporter
  - action: labelmap
    regex: __meta_kubernetes_service_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_service_name]
    target_label: kubernetes_name
  scrape_interval: 15s

# ==================== Blackbox Monitoring (External Services) ====================
- job_name: 'blackbox-http'
  metrics_path: /probe
  params:
    module: [http_2xx]
  static_configs:
  - targets:
    - https://api.telegram.org/bot  # Telegram API health
  relabel_configs:
  - source_labels: [__address__]
    target_label: __param_target
  - source_labels: [__param_target]
    target_label: instance
  - target_label: __address__
    replacement: blackbox-exporter.ai-conversation-monitoring.svc.cluster.local:9115
  scrape_interval: 60s

# ==================== Custom Application Metrics ====================
- job_name: 'ai-conversation-custom-metrics'
  honor_labels: true
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - ai-conversation
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape_custom]
    action: keep
    regex: true
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    action: replace
    target_label: __metrics_path__
    regex: (.+)
    replacement: $1
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    action: replace
    regex: ([^:]+)(?::[0-9]+)?;([0-9]+)
    replacement: $1:$2
    target_label: __address__
  - action: labelmap
    regex: __meta_kubernetes_service_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    action: replace
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_service_name]
    action: replace
    target_label: kubernetes_name
  scrape_interval: 15s

# ==================== Federation (if multiple Prometheus instances) ====================
# - job_name: 'federate'
#   scrape_interval: 15s
#   honor_labels: true
#   metrics_path: '/federate'
#   params:
#     'match[]':
#     - '{job=~"ai-conversation-.*"}'
#     - '{job=~"postgres-.*"}'
#     - '{job=~"redis-.*"}'
#   static_configs:
#   - targets:
#     - prometheus-regional.monitoring.svc.cluster.local:9090

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 50GB
    path: /prometheus/data
    wal-compression: true

# Remote write configuration (for long-term storage)
# remote_write:
# - url: "https://prometheus-remote-write.example.com/api/v1/write"
#   basic_auth:
#     username: "prometheus"
#     password_file: /etc/prometheus/remote-write-password
#   queue_config:
#     max_samples_per_send: 1000
#     max_shards: 200
#     capacity: 2500